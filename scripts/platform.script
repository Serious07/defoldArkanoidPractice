go.property("speed", 10)

local ACTION_ID_LEFT = hash("left")
local ACTION_ID_RIGHT = hash("right")
local ACTION_COLLSION = hash("contact_point_response")
local HASH_WALL_GROUP = hash("wall")

local leftPressed = false
local rightPressed = false

local leftWallTouched = false
local rightWallTouched = false

local newVelocity

function init(self)
	msg.post(".", "acquire_input_focus")
	newVelocity = vmath.vector3(0, 0, 0)
end

function update(self, dt)
	local p = go.get_position()
	local move_amount = newVelocity * self.speed * dt
	p = p + move_amount
	go.set_position(p)
end

function on_message(self, message_id, message, sender)
	if message_id == ACTION_COLLSION then
		if message.group == HASH_WALL_GROUP and round(message.normal.x) == 1 and (not leftWallTouched) then
			leftWallTouched = true
			print("left Wall Touched")
			newVelocity = vmath.vector3(0, 0, 0)
		elseif message.group == HASH_WALL_GROUP and round(message.normal.x) == -1 and (not rightWallTouched) then
			rightWallTouched = true
			print("right Wall Touched")
			newVelocity = vmath.vector3(0, 0, 0)
		end
	end
end

function on_input(self, action_id, action)
	-- Update key press status
	if action_id == ACTION_ID_LEFT then
		if action.pressed then
			leftPressed = true
		elseif action.released then
			leftPressed = false
		end
	elseif action_id == ACTION_ID_RIGHT then
		if action.pressed then
			rightPressed = true
		elseif action.released then
			rightPressed = false
		end
	end
	
	-- Moved to the wall
	if (leftPressed and leftWallTouched) or (rightPressed and rightWallTouched) then
		newVelocity = vmath.vector3(0, 0, 0)
		return false
	end
	
	-- Moved freely
	if (leftPressed and rightPressed) or ((not leftPressed) and (not rightPressed)) then
		newVelocity = vmath.vector3(0, 0, 0)
		return false
	elseif leftPressed and (not rightPressed) then
		newVelocity = vmath.vector3(-1, 0, 0)
		rightWallTouched = false
		return true
	elseif (not leftPressed) and rightPressed then
		newVelocity = vmath.vector3(1, 0, 0)
		leftWallTouched = false
		return true
	end
end